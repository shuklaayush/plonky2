<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="966"><g><title>dyld`start (1 samples, 0.10%)</title><rect x="0.0000%" y="405" width="0.1035%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.10%)</title><rect x="0.0000%" y="389" width="0.1035%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.10%)</title><rect x="0.0000%" y="373" width="0.1035%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.10%)</title><rect x="0.1035%" y="405" width="0.1035%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3535%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.62%)</title><rect x="0.2070%" y="229" width="0.6211%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="6"/><text x="0.4570%" y="239.50"></text></g><g><title>starky-460634d3c708881e`core::array::drain::drain_array_with (1 samples, 0.10%)</title><rect x="0.8282%" y="229" width="0.1035%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="1"/><text x="1.0782%" y="239.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_rows (35 samples, 3.62%)</title><rect x="0.2070%" y="245" width="3.6232%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="35"/><text x="0.4570%" y="255.50">star..</text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_row_for_round (28 samples, 2.90%)</title><rect x="0.9317%" y="229" width="2.8986%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="28"/><text x="1.1817%" y="239.50">st..</text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_row_for_round::_{{closure}} (15 samples, 1.55%)</title><rect x="2.2774%" y="213" width="1.5528%" height="15" fill="rgb(218,30,26)" fg:x="22" fg:w="15"/><text x="2.5274%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.10%)</title><rect x="3.8302%" y="229" width="0.1035%" height="15" fill="rgb(220,122,19)" fg:x="37" fg:w="1"/><text x="4.0802%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.10%)</title><rect x="3.8302%" y="213" width="0.1035%" height="15" fill="rgb(250,228,42)" fg:x="37" fg:w="1"/><text x="4.0802%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.10%)</title><rect x="3.8302%" y="197" width="0.1035%" height="15" fill="rgb(240,193,28)" fg:x="37" fg:w="1"/><text x="4.0802%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 1.04%)</title><rect x="3.9337%" y="229" width="1.0352%" height="15" fill="rgb(216,20,37)" fg:x="38" fg:w="10"/><text x="4.1837%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 1.04%)</title><rect x="3.9337%" y="213" width="1.0352%" height="15" fill="rgb(206,188,39)" fg:x="38" fg:w="10"/><text x="4.1837%" y="223.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace (50 samples, 5.18%)</title><rect x="0.2070%" y="261" width="5.1760%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="50"/><text x="0.4570%" y="271.50">starky..</text></g><g><title>starky-460634d3c708881e`starky::util::trace_rows_to_poly_values (15 samples, 1.55%)</title><rect x="3.8302%" y="245" width="1.5528%" height="15" fill="rgb(231,73,38)" fg:x="37" fg:w="15"/><text x="4.0802%" y="255.50"></text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.41%)</title><rect x="4.9689%" y="229" width="0.4141%" height="15" fill="rgb(225,20,46)" fg:x="48" fg:w="4"/><text x="5.2189%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.41%)</title><rect x="4.9689%" y="213" width="0.4141%" height="15" fill="rgb(210,31,41)" fg:x="48" fg:w="4"/><text x="5.2189%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (4 samples, 0.41%)</title><rect x="5.3830%" y="229" width="0.4141%" height="15" fill="rgb(221,200,47)" fg:x="52" fg:w="4"/><text x="5.6330%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.41%)</title><rect x="5.3830%" y="213" width="0.4141%" height="15" fill="rgb(226,26,5)" fg:x="52" fg:w="4"/><text x="5.6330%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.83%)</title><rect x="5.3830%" y="245" width="0.8282%" height="15" fill="rgb(249,33,26)" fg:x="52" fg:w="8"/><text x="5.6330%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (4 samples, 0.41%)</title><rect x="5.7971%" y="229" width="0.4141%" height="15" fill="rgb(235,183,28)" fg:x="56" fg:w="4"/><text x="6.0471%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.41%)</title><rect x="5.7971%" y="213" width="0.4141%" height="15" fill="rgb(221,5,38)" fg:x="56" fg:w="4"/><text x="6.0471%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (2 samples, 0.21%)</title><rect x="6.2112%" y="245" width="0.2070%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="2"/><text x="6.4612%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.21%)</title><rect x="6.2112%" y="229" width="0.2070%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="2"/><text x="6.4612%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.52%)</title><rect x="6.4182%" y="245" width="0.5176%" height="15" fill="rgb(249,31,29)" fg:x="62" fg:w="5"/><text x="6.6682%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.21%)</title><rect x="6.9358%" y="213" width="0.2070%" height="15" fill="rgb(225,111,53)" fg:x="67" fg:w="2"/><text x="7.1858%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 2.80%)</title><rect x="12.3188%" y="181" width="2.7950%" height="15" fill="rgb(238,160,17)" fg:x="119" fg:w="27"/><text x="12.5688%" y="191.50">st..</text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic::_{{closure}} (10 samples, 1.04%)</title><rect x="14.0787%" y="165" width="1.0352%" height="15" fill="rgb(214,148,48)" fg:x="136" fg:w="10"/><text x="14.3287%" y="175.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic::_{{closure}} (15 samples, 1.55%)</title><rect x="15.1139%" y="181" width="1.5528%" height="15" fill="rgb(232,36,49)" fg:x="146" fg:w="15"/><text x="15.3639%" y="191.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic (123 samples, 12.73%)</title><rect x="7.1429%" y="197" width="12.7329%" height="15" fill="rgb(209,103,24)" fg:x="69" fg:w="123"/><text x="7.3929%" y="207.50">starky-460634d3c708..</text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor3_gen (31 samples, 3.21%)</title><rect x="16.6667%" y="181" width="3.2091%" height="15" fill="rgb(229,88,8)" fg:x="161" fg:w="31"/><text x="16.9167%" y="191.50">sta..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 1.24%)</title><rect x="19.8758%" y="181" width="1.2422%" height="15" fill="rgb(213,181,19)" fg:x="192" fg:w="12"/><text x="20.1258%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::get_lde_values_packed (13 samples, 1.35%)</title><rect x="19.8758%" y="197" width="1.3458%" height="15" fill="rgb(254,191,54)" fg:x="192" fg:w="13"/><text x="20.1258%" y="207.50"></text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$malloc (1 samples, 0.10%)</title><rect x="21.1180%" y="181" width="0.1035%" height="15" fill="rgb(241,83,37)" fg:x="204" fg:w="1"/><text x="21.3680%" y="191.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor3_gen (6 samples, 0.62%)</title><rect x="21.2215%" y="197" width="0.6211%" height="15" fill="rgb(233,36,39)" fg:x="205" fg:w="6"/><text x="21.4715%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (160 samples, 16.56%)</title><rect x="6.9358%" y="245" width="16.5631%" height="15" fill="rgb(226,3,54)" fg:x="67" fg:w="160"/><text x="7.1858%" y="255.50">starky-460634d3c708881e`&lt;a..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (160 samples, 16.56%)</title><rect x="6.9358%" y="229" width="16.5631%" height="15" fill="rgb(245,192,40)" fg:x="67" fg:w="160"/><text x="7.1858%" y="239.50">starky-460634d3c708881e`&lt;c..</text></g><g><title>starky-460634d3c708881e`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (158 samples, 16.36%)</title><rect x="7.1429%" y="213" width="16.3561%" height="15" fill="rgb(238,167,29)" fg:x="69" fg:w="158"/><text x="7.3929%" y="223.50">starky-460634d3c708881e`c..</text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor_gen (16 samples, 1.66%)</title><rect x="21.8427%" y="197" width="1.6563%" height="15" fill="rgb(232,182,51)" fg:x="211" fg:w="16"/><text x="22.0927%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="23.4990%" y="229" width="0.1035%" height="15" fill="rgb(231,60,39)" fg:x="227" fg:w="1"/><text x="23.7490%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="23.4990%" y="213" width="0.1035%" height="15" fill="rgb(208,69,12)" fg:x="227" fg:w="1"/><text x="23.7490%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="23.4990%" y="197" width="0.1035%" height="15" fill="rgb(235,93,37)" fg:x="227" fg:w="1"/><text x="23.7490%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_with_options (1 samples, 0.10%)</title><rect x="23.4990%" y="181" width="0.1035%" height="15" fill="rgb(213,116,39)" fg:x="227" fg:w="1"/><text x="23.7490%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic (1 samples, 0.10%)</title><rect x="23.4990%" y="165" width="0.1035%" height="15" fill="rgb(222,207,29)" fg:x="227" fg:w="1"/><text x="23.7490%" y="175.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_coeffs (3 samples, 0.31%)</title><rect x="23.4990%" y="245" width="0.3106%" height="15" fill="rgb(206,96,30)" fg:x="227" fg:w="3"/><text x="23.7490%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new (2 samples, 0.21%)</title><rect x="23.6025%" y="229" width="0.2070%" height="15" fill="rgb(218,138,4)" fg:x="228" fg:w="2"/><text x="23.8525%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="213" width="0.2070%" height="15" fill="rgb(250,191,14)" fg:x="228" fg:w="2"/><text x="23.8525%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="197" width="0.2070%" height="15" fill="rgb(239,60,40)" fg:x="228" fg:w="2"/><text x="23.8525%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="181" width="0.2070%" height="15" fill="rgb(206,27,48)" fg:x="228" fg:w="2"/><text x="23.8525%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="165" width="0.2070%" height="15" fill="rgb(225,35,8)" fg:x="228" fg:w="2"/><text x="23.8525%" y="175.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="149" width="0.2070%" height="15" fill="rgb(250,213,24)" fg:x="228" fg:w="2"/><text x="23.8525%" y="159.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="133" width="0.2070%" height="15" fill="rgb(247,123,22)" fg:x="228" fg:w="2"/><text x="23.8525%" y="143.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="117" width="0.2070%" height="15" fill="rgb(231,138,38)" fg:x="228" fg:w="2"/><text x="23.8525%" y="127.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (2 samples, 0.21%)</title><rect x="23.6025%" y="101" width="0.2070%" height="15" fill="rgb(231,145,46)" fg:x="228" fg:w="2"/><text x="23.8525%" y="111.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakHash&lt;_&gt; as plonky2::plonk::config::Hasher&lt;F&gt;&gt;::hash_no_pad (2 samples, 0.21%)</title><rect x="23.6025%" y="85" width="0.2070%" height="15" fill="rgb(251,118,11)" fg:x="228" fg:w="2"/><text x="23.8525%" y="95.50"></text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (2 samples, 0.21%)</title><rect x="23.6025%" y="69" width="0.2070%" height="15" fill="rgb(217,147,25)" fg:x="228" fg:w="2"/><text x="23.8525%" y="79.50"></text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (2 samples, 0.21%)</title><rect x="23.6025%" y="53" width="0.2070%" height="15" fill="rgb(247,81,37)" fg:x="228" fg:w="2"/><text x="23.8525%" y="63.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic (6 samples, 0.62%)</title><rect x="24.4306%" y="197" width="0.6211%" height="15" fill="rgb(209,12,38)" fg:x="236" fg:w="6"/><text x="24.6806%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2_util::reverse_index_bits_in_place (6 samples, 0.62%)</title><rect x="24.4306%" y="181" width="0.6211%" height="15" fill="rgb(227,1,9)" fg:x="236" fg:w="6"/><text x="24.6806%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic_simd (56 samples, 5.80%)</title><rect x="25.0518%" y="197" width="5.7971%" height="15" fill="rgb(248,47,43)" fg:x="242" fg:w="56"/><text x="25.3018%" y="207.50">starky-..</text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (79 samples, 8.18%)</title><rect x="23.8095%" y="229" width="8.1781%" height="15" fill="rgb(221,10,30)" fg:x="230" fg:w="79"/><text x="24.0595%" y="239.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::ifft_with_options (79 samples, 8.18%)</title><rect x="23.8095%" y="213" width="8.1781%" height="15" fill="rgb(210,229,1)" fg:x="230" fg:w="79"/><text x="24.0595%" y="223.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_root_table (11 samples, 1.14%)</title><rect x="30.8489%" y="197" width="1.1387%" height="15" fill="rgb(222,148,37)" fg:x="298" fg:w="11"/><text x="31.0989%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 1.14%)</title><rect x="30.8489%" y="181" width="1.1387%" height="15" fill="rgb(234,67,33)" fg:x="298" fg:w="11"/><text x="31.0989%" y="191.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.21%)</title><rect x="31.7805%" y="165" width="0.2070%" height="15" fill="rgb(247,98,35)" fg:x="307" fg:w="2"/><text x="32.0305%" y="175.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="31.7805%" y="149" width="0.2070%" height="15" fill="rgb(247,138,52)" fg:x="307" fg:w="2"/><text x="32.0305%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.21%)</title><rect x="31.7805%" y="133" width="0.2070%" height="15" fill="rgb(213,79,30)" fg:x="307" fg:w="2"/><text x="32.0305%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.10%)</title><rect x="31.8841%" y="117" width="0.1035%" height="15" fill="rgb(246,177,23)" fg:x="308" fg:w="1"/><text x="32.1341%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.10%)</title><rect x="31.8841%" y="101" width="0.1035%" height="15" fill="rgb(230,62,27)" fg:x="308" fg:w="1"/><text x="32.1341%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="31.8841%" y="85" width="0.1035%" height="15" fill="rgb(216,154,8)" fg:x="308" fg:w="1"/><text x="32.1341%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.10%)</title><rect x="31.9876%" y="213" width="0.1035%" height="15" fill="rgb(244,35,45)" fg:x="309" fg:w="1"/><text x="32.2376%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.10%)</title><rect x="31.9876%" y="197" width="0.1035%" height="15" fill="rgb(251,115,12)" fg:x="309" fg:w="1"/><text x="32.2376%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 5.59%)</title><rect x="32.0911%" y="197" width="5.5901%" height="15" fill="rgb(240,54,50)" fg:x="310" fg:w="54"/><text x="32.3411%" y="207.50">starky-..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.21%)</title><rect x="37.6812%" y="165" width="0.2070%" height="15" fill="rgb(233,84,52)" fg:x="364" fg:w="2"/><text x="37.9312%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.21%)</title><rect x="37.8882%" y="165" width="0.2070%" height="15" fill="rgb(207,117,47)" fg:x="366" fg:w="2"/><text x="38.1382%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.10%)</title><rect x="41.8219%" y="85" width="0.1035%" height="15" fill="rgb(249,43,39)" fg:x="404" fg:w="1"/><text x="42.0719%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.10%)</title><rect x="41.8219%" y="69" width="0.1035%" height="15" fill="rgb(209,38,44)" fg:x="404" fg:w="1"/><text x="42.0719%" y="79.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 4.04%)</title><rect x="38.0952%" y="165" width="4.0373%" height="15" fill="rgb(236,212,23)" fg:x="368" fg:w="39"/><text x="38.3452%" y="175.50">star..</text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.31%)</title><rect x="41.8219%" y="149" width="0.3106%" height="15" fill="rgb(242,79,21)" fg:x="404" fg:w="3"/><text x="42.0719%" y="159.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="41.8219%" y="133" width="0.3106%" height="15" fill="rgb(211,96,35)" fg:x="404" fg:w="3"/><text x="42.0719%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.31%)</title><rect x="41.8219%" y="117" width="0.3106%" height="15" fill="rgb(253,215,40)" fg:x="404" fg:w="3"/><text x="42.0719%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.31%)</title><rect x="41.8219%" y="101" width="0.3106%" height="15" fill="rgb(211,81,21)" fg:x="404" fg:w="3"/><text x="42.0719%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.21%)</title><rect x="41.9255%" y="85" width="0.2070%" height="15" fill="rgb(208,190,38)" fg:x="405" fg:w="2"/><text x="42.1755%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="42.1325%" y="149" width="0.1035%" height="15" fill="rgb(235,213,38)" fg:x="407" fg:w="1"/><text x="42.3825%" y="159.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic (21 samples, 2.17%)</title><rect x="42.2360%" y="149" width="2.1739%" height="15" fill="rgb(237,122,38)" fg:x="408" fg:w="21"/><text x="42.4860%" y="159.50">s..</text></g><g><title>starky-460634d3c708881e`plonky2_util::reverse_index_bits_in_place (7 samples, 0.72%)</title><rect x="43.6853%" y="133" width="0.7246%" height="15" fill="rgb(244,218,35)" fg:x="422" fg:w="7"/><text x="43.9353%" y="143.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic_simd (100 samples, 10.35%)</title><rect x="44.4099%" y="149" width="10.3520%" height="15" fill="rgb(240,68,47)" fg:x="429" fg:w="100"/><text x="44.6599%" y="159.50">starky-460634d3..</text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.10%)</title><rect x="57.5569%" y="53" width="0.1035%" height="15" fill="rgb(210,16,53)" fg:x="556" fg:w="1"/><text x="57.8069%" y="63.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_with_options (151 samples, 15.63%)</title><rect x="42.1325%" y="165" width="15.6315%" height="15" fill="rgb(235,124,12)" fg:x="407" fg:w="151"/><text x="42.3825%" y="175.50">starky-460634d3c708881e`..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_root_table (29 samples, 3.00%)</title><rect x="54.7619%" y="149" width="3.0021%" height="15" fill="rgb(224,169,11)" fg:x="529" fg:w="29"/><text x="55.0119%" y="159.50">sta..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 3.00%)</title><rect x="54.7619%" y="133" width="3.0021%" height="15" fill="rgb(250,166,2)" fg:x="529" fg:w="29"/><text x="55.0119%" y="143.50">sta..</text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.31%)</title><rect x="57.4534%" y="117" width="0.3106%" height="15" fill="rgb(242,216,29)" fg:x="555" fg:w="3"/><text x="57.7034%" y="127.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="57.4534%" y="101" width="0.3106%" height="15" fill="rgb(230,116,27)" fg:x="555" fg:w="3"/><text x="57.7034%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.21%)</title><rect x="57.5569%" y="85" width="0.2070%" height="15" fill="rgb(228,99,48)" fg:x="556" fg:w="2"/><text x="57.8069%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.21%)</title><rect x="57.5569%" y="69" width="0.2070%" height="15" fill="rgb(253,11,6)" fg:x="556" fg:w="2"/><text x="57.8069%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.10%)</title><rect x="57.6605%" y="53" width="0.1035%" height="15" fill="rgb(247,143,39)" fg:x="557" fg:w="1"/><text x="57.9105%" y="63.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (249 samples, 25.78%)</title><rect x="32.0911%" y="213" width="25.7764%" height="15" fill="rgb(236,97,10)" fg:x="310" fg:w="249"/><text x="32.3411%" y="223.50">starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (195 samples, 20.19%)</title><rect x="37.6812%" y="197" width="20.1863%" height="15" fill="rgb(233,208,19)" fg:x="364" fg:w="195"/><text x="37.9312%" y="207.50">starky-460634d3c708881e`&lt;core::i..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (195 samples, 20.19%)</title><rect x="37.6812%" y="181" width="20.1863%" height="15" fill="rgb(216,164,2)" fg:x="364" fg:w="195"/><text x="37.9312%" y="191.50">starky-460634d3c708881e`&lt;core::i..</text></g><g><title>starky-460634d3c708881e`plonky2_field::polynomial::PolynomialCoeffs&lt;F&gt;::lde (1 samples, 0.10%)</title><rect x="57.7640%" y="165" width="0.1035%" height="15" fill="rgb(220,129,5)" fg:x="558" fg:w="1"/><text x="58.0140%" y="175.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="57.7640%" y="149" width="0.1035%" height="15" fill="rgb(242,17,10)" fg:x="558" fg:w="1"/><text x="58.0140%" y="159.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="57.7640%" y="133" width="0.1035%" height="15" fill="rgb(242,107,0)" fg:x="558" fg:w="1"/><text x="58.0140%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.10%)</title><rect x="57.7640%" y="117" width="0.1035%" height="15" fill="rgb(251,28,31)" fg:x="558" fg:w="1"/><text x="58.0140%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.10%)</title><rect x="57.7640%" y="101" width="0.1035%" height="15" fill="rgb(233,223,10)" fg:x="558" fg:w="1"/><text x="58.0140%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="57.7640%" y="85" width="0.1035%" height="15" fill="rgb(215,21,27)" fg:x="558" fg:w="1"/><text x="58.0140%" y="95.50"></text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (2 samples, 0.21%)</title><rect x="57.8675%" y="117" width="0.2070%" height="15" fill="rgb(232,23,21)" fg:x="559" fg:w="2"/><text x="58.1175%" y="127.50"></text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (2 samples, 0.21%)</title><rect x="57.8675%" y="101" width="0.2070%" height="15" fill="rgb(244,5,23)" fg:x="559" fg:w="2"/><text x="58.1175%" y="111.50"></text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (1 samples, 0.10%)</title><rect x="58.0745%" y="85" width="0.1035%" height="15" fill="rgb(226,81,46)" fg:x="561" fg:w="1"/><text x="58.3245%" y="95.50"></text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (1 samples, 0.10%)</title><rect x="58.0745%" y="69" width="0.1035%" height="15" fill="rgb(247,70,30)" fg:x="561" fg:w="1"/><text x="58.3245%" y="79.50"></text></g><g><title>starky-460634d3c708881e`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (4 samples, 0.41%)</title><rect x="58.7992%" y="37" width="0.4141%" height="15" fill="rgb(212,68,19)" fg:x="568" fg:w="4"/><text x="59.0492%" y="47.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_values (483 samples, 50.00%)</title><rect x="23.8095%" y="245" width="50.0000%" height="15" fill="rgb(240,187,13)" fg:x="230" fg:w="483"/><text x="24.0595%" y="255.50">starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_values</text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_coeffs (404 samples, 41.82%)</title><rect x="31.9876%" y="229" width="41.8219%" height="15" fill="rgb(223,113,26)" fg:x="309" fg:w="404"/><text x="32.2376%" y="239.50">starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new (154 samples, 15.94%)</title><rect x="57.8675%" y="213" width="15.9420%" height="15" fill="rgb(206,192,2)" fg:x="559" fg:w="154"/><text x="58.1175%" y="223.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (154 samples, 15.94%)</title><rect x="57.8675%" y="197" width="15.9420%" height="15" fill="rgb(241,108,4)" fg:x="559" fg:w="154"/><text x="58.1175%" y="207.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (154 samples, 15.94%)</title><rect x="57.8675%" y="181" width="15.9420%" height="15" fill="rgb(247,173,49)" fg:x="559" fg:w="154"/><text x="58.1175%" y="191.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (154 samples, 15.94%)</title><rect x="57.8675%" y="165" width="15.9420%" height="15" fill="rgb(224,114,35)" fg:x="559" fg:w="154"/><text x="58.1175%" y="175.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (154 samples, 15.94%)</title><rect x="57.8675%" y="149" width="15.9420%" height="15" fill="rgb(245,159,27)" fg:x="559" fg:w="154"/><text x="58.1175%" y="159.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (154 samples, 15.94%)</title><rect x="57.8675%" y="133" width="15.9420%" height="15" fill="rgb(245,172,44)" fg:x="559" fg:w="154"/><text x="58.1175%" y="143.50">starky-460634d3c708881e`p..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (152 samples, 15.73%)</title><rect x="58.0745%" y="117" width="15.7350%" height="15" fill="rgb(236,23,11)" fg:x="561" fg:w="152"/><text x="58.3245%" y="127.50">starky-460634d3c708881e`..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (152 samples, 15.73%)</title><rect x="58.0745%" y="101" width="15.7350%" height="15" fill="rgb(205,117,38)" fg:x="561" fg:w="152"/><text x="58.3245%" y="111.50">starky-460634d3c708881e`..</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (151 samples, 15.63%)</title><rect x="58.1781%" y="85" width="15.6315%" height="15" fill="rgb(237,72,25)" fg:x="562" fg:w="151"/><text x="58.4281%" y="95.50">starky-460634d3c708881e`..</text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakHash&lt;_&gt; as plonky2::plonk::config::Hasher&lt;F&gt;&gt;::hash_no_pad (151 samples, 15.63%)</title><rect x="58.1781%" y="69" width="15.6315%" height="15" fill="rgb(244,70,9)" fg:x="562" fg:w="151"/><text x="58.4281%" y="79.50">starky-460634d3c708881e`..</text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (145 samples, 15.01%)</title><rect x="58.7992%" y="53" width="15.0104%" height="15" fill="rgb(217,125,39)" fg:x="568" fg:w="145"/><text x="59.0492%" y="63.50">starky-460634d3c708881e..</text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (141 samples, 14.60%)</title><rect x="59.2133%" y="37" width="14.5963%" height="15" fill="rgb(235,36,10)" fg:x="572" fg:w="141"/><text x="59.4633%" y="47.50">starky-460634d3c708881..</text></g><g><title>starky-460634d3c708881e`&lt;&amp;plonky2_field::polynomial::PolynomialCoeffs&lt;F&gt; as core::ops::arith::Add&gt;::add (10 samples, 1.04%)</title><rect x="73.8095%" y="213" width="1.0352%" height="15" fill="rgb(251,123,47)" fg:x="713" fg:w="10"/><text x="74.0595%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 1.04%)</title><rect x="73.8095%" y="197" width="1.0352%" height="15" fill="rgb(221,13,13)" fg:x="713" fg:w="10"/><text x="74.0595%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 1.24%)</title><rect x="74.8447%" y="213" width="1.2422%" height="15" fill="rgb(238,131,9)" fg:x="723" fg:w="12"/><text x="75.0947%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 3.73%)</title><rect x="73.8095%" y="229" width="3.7267%" height="15" fill="rgb(211,50,8)" fg:x="713" fg:w="36"/><text x="74.0595%" y="239.50">star..</text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 1.45%)</title><rect x="76.0870%" y="213" width="1.4493%" height="15" fill="rgb(245,182,24)" fg:x="735" fg:w="14"/><text x="76.3370%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="77.5362%" y="181" width="0.1035%" height="15" fill="rgb(242,14,37)" fg:x="749" fg:w="1"/><text x="77.7862%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.10%)</title><rect x="77.6398%" y="181" width="0.1035%" height="15" fill="rgb(246,228,12)" fg:x="750" fg:w="1"/><text x="77.8898%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.10%)</title><rect x="77.8468%" y="165" width="0.1035%" height="15" fill="rgb(213,55,15)" fg:x="752" fg:w="1"/><text x="78.0968%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.72%)</title><rect x="78.1573%" y="149" width="0.7246%" height="15" fill="rgb(209,9,3)" fg:x="755" fg:w="7"/><text x="78.4073%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.10%)</title><rect x="78.8820%" y="149" width="0.1035%" height="15" fill="rgb(230,59,30)" fg:x="762" fg:w="1"/><text x="79.1320%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.31%)</title><rect x="78.9855%" y="149" width="0.3106%" height="15" fill="rgb(209,121,21)" fg:x="763" fg:w="3"/><text x="79.2355%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.41%)</title><rect x="79.5031%" y="133" width="0.4141%" height="15" fill="rgb(220,109,13)" fg:x="768" fg:w="4"/><text x="79.7531%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="79.9172%" y="133" width="0.1035%" height="15" fill="rgb(232,18,1)" fg:x="772" fg:w="1"/><text x="80.1672%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.31%)</title><rect x="80.0207%" y="133" width="0.3106%" height="15" fill="rgb(215,41,42)" fg:x="773" fg:w="3"/><text x="80.2707%" y="143.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="80.3313%" y="133" width="0.1035%" height="15" fill="rgb(224,123,36)" fg:x="776" fg:w="1"/><text x="80.5813%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.10%)</title><rect x="80.7453%" y="117" width="0.1035%" height="15" fill="rgb(240,125,3)" fg:x="780" fg:w="1"/><text x="80.9953%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.31%)</title><rect x="80.8489%" y="117" width="0.3106%" height="15" fill="rgb(205,98,50)" fg:x="781" fg:w="3"/><text x="81.0989%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.21%)</title><rect x="81.1594%" y="117" width="0.2070%" height="15" fill="rgb(205,185,37)" fg:x="784" fg:w="2"/><text x="81.4094%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="81.3665%" y="117" width="0.1035%" height="15" fill="rgb(238,207,15)" fg:x="786" fg:w="1"/><text x="81.6165%" y="127.50"></text></g><g><title>starky-460634d3c708881e`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (2 samples, 0.21%)</title><rect x="81.4700%" y="117" width="0.2070%" height="15" fill="rgb(213,199,42)" fg:x="787" fg:w="2"/><text x="81.7200%" y="127.50"></text></g><g><title>starky-460634d3c708881e`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::update (2 samples, 0.21%)</title><rect x="81.6770%" y="117" width="0.2070%" height="15" fill="rgb(235,201,11)" fg:x="789" fg:w="2"/><text x="81.9270%" y="127.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (100 samples, 10.35%)</title><rect x="79.2961%" y="149" width="10.3520%" height="15" fill="rgb(207,46,11)" fg:x="766" fg:w="100"/><text x="79.5461%" y="159.50">starky-460634d3..</text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (89 samples, 9.21%)</title><rect x="80.4348%" y="133" width="9.2133%" height="15" fill="rgb(241,35,35)" fg:x="777" fg:w="89"/><text x="80.6848%" y="143.50">starky-460634..</text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (75 samples, 7.76%)</title><rect x="81.8841%" y="117" width="7.7640%" height="15" fill="rgb(243,32,47)" fg:x="791" fg:w="75"/><text x="82.1341%" y="127.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$malloc (1 samples, 0.10%)</title><rect x="89.6480%" y="149" width="0.1035%" height="15" fill="rgb(247,202,23)" fg:x="866" fg:w="1"/><text x="89.8980%" y="159.50"></text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$memcpy (1 samples, 0.10%)</title><rect x="89.7516%" y="149" width="0.1035%" height="15" fill="rgb(219,102,11)" fg:x="867" fg:w="1"/><text x="90.0016%" y="159.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 12.01%)</title><rect x="77.9503%" y="165" width="12.0083%" height="15" fill="rgb(243,110,44)" fg:x="753" fg:w="116"/><text x="78.2003%" y="175.50">starky-460634d3c70..</text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (1 samples, 0.10%)</title><rect x="89.8551%" y="149" width="0.1035%" height="15" fill="rgb(222,74,54)" fg:x="868" fg:w="1"/><text x="90.1051%" y="159.50"></text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$free (1 samples, 0.10%)</title><rect x="89.9586%" y="165" width="0.1035%" height="15" fill="rgb(216,99,12)" fg:x="869" fg:w="1"/><text x="90.2086%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.10%)</title><rect x="90.2692%" y="101" width="0.1035%" height="15" fill="rgb(226,22,26)" fg:x="872" fg:w="1"/><text x="90.5192%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.52%)</title><rect x="90.3727%" y="85" width="0.5176%" height="15" fill="rgb(217,163,10)" fg:x="873" fg:w="5"/><text x="90.6227%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.62%)</title><rect x="90.3727%" y="101" width="0.6211%" height="15" fill="rgb(213,25,53)" fg:x="873" fg:w="6"/><text x="90.6227%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="90.8903%" y="85" width="0.1035%" height="15" fill="rgb(252,105,26)" fg:x="878" fg:w="1"/><text x="91.1403%" y="95.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (129 samples, 13.35%)</title><rect x="77.7433%" y="181" width="13.3540%" height="15" fill="rgb(220,39,43)" fg:x="751" fg:w="129"/><text x="77.9933%" y="191.50">starky-460634d3c7088..</text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 1.04%)</title><rect x="90.0621%" y="165" width="1.0352%" height="15" fill="rgb(229,68,48)" fg:x="870" fg:w="10"/><text x="90.3121%" y="175.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (10 samples, 1.04%)</title><rect x="90.0621%" y="149" width="1.0352%" height="15" fill="rgb(252,8,32)" fg:x="870" fg:w="10"/><text x="90.3121%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 1.04%)</title><rect x="90.0621%" y="133" width="1.0352%" height="15" fill="rgb(223,20,43)" fg:x="870" fg:w="10"/><text x="90.3121%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 1.04%)</title><rect x="90.0621%" y="117" width="1.0352%" height="15" fill="rgb(229,81,49)" fg:x="870" fg:w="10"/><text x="90.3121%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="90.9938%" y="101" width="0.1035%" height="15" fill="rgb(236,28,36)" fg:x="879" fg:w="1"/><text x="91.2438%" y="111.50"></text></g><g><title>starky-460634d3c708881e`&lt;T as plonky2_maybe_rayon::ParallelIteratorMock&gt;::find_any (133 samples, 13.77%)</title><rect x="77.5362%" y="213" width="13.7681%" height="15" fill="rgb(249,185,26)" fg:x="749" fg:w="133"/><text x="77.7862%" y="223.50">starky-460634d3c70888..</text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakPermutation&lt;F&gt; as plonky2::hash::hashing::PlonkyPermutation&lt;F&gt;&gt;::permute (133 samples, 13.77%)</title><rect x="77.5362%" y="197" width="13.7681%" height="15" fill="rgb(249,174,33)" fg:x="749" fg:w="133"/><text x="77.7862%" y="207.50">starky-460634d3c70888..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="91.0973%" y="181" width="0.2070%" height="15" fill="rgb(233,201,37)" fg:x="880" fg:w="2"/><text x="91.3473%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::prove_openings (170 samples, 17.60%)</title><rect x="73.8095%" y="245" width="17.5983%" height="15" fill="rgb(221,78,26)" fg:x="713" fg:w="170"/><text x="74.0595%" y="255.50">starky-460634d3c708881e`plo..</text></g><g><title>starky-460634d3c708881e`plonky2::fri::prover::fri_proof (134 samples, 13.87%)</title><rect x="77.5362%" y="229" width="13.8716%" height="15" fill="rgb(250,127,30)" fg:x="749" fg:w="134"/><text x="77.7862%" y="239.50">starky-460634d3c70888..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="91.3043%" y="213" width="0.1035%" height="15" fill="rgb(230,49,44)" fg:x="882" fg:w="1"/><text x="91.5543%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.10%)</title><rect x="91.3043%" y="197" width="0.1035%" height="15" fill="rgb(229,67,23)" fg:x="882" fg:w="1"/><text x="91.5543%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::iop::challenger::Challenger&lt;F,H&gt;::observe_extension_elements (2 samples, 0.21%)</title><rect x="91.4079%" y="245" width="0.2070%" height="15" fill="rgb(249,83,47)" fg:x="883" fg:w="2"/><text x="91.6579%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakPermutation&lt;F&gt; as plonky2::hash::hashing::PlonkyPermutation&lt;F&gt;&gt;::permute (2 samples, 0.21%)</title><rect x="91.4079%" y="229" width="0.2070%" height="15" fill="rgb(215,43,3)" fg:x="883" fg:w="2"/><text x="91.6579%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="91.4079%" y="213" width="0.2070%" height="15" fill="rgb(238,154,13)" fg:x="883" fg:w="2"/><text x="91.6579%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="91.4079%" y="197" width="0.2070%" height="15" fill="rgb(219,56,2)" fg:x="883" fg:w="2"/><text x="91.6579%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.21%)</title><rect x="91.4079%" y="181" width="0.2070%" height="15" fill="rgb(233,0,4)" fg:x="883" fg:w="2"/><text x="91.6579%" y="191.50"></text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (2 samples, 0.21%)</title><rect x="91.4079%" y="165" width="0.2070%" height="15" fill="rgb(235,30,7)" fg:x="883" fg:w="2"/><text x="91.6579%" y="175.50"></text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (2 samples, 0.21%)</title><rect x="91.4079%" y="149" width="0.2070%" height="15" fill="rgb(250,79,13)" fg:x="883" fg:w="2"/><text x="91.6579%" y="159.50"></text></g><g><title>starky-460634d3c708881e`starky::prover::prove (905 samples, 93.69%)</title><rect x="5.3830%" y="261" width="93.6853%" height="15" fill="rgb(211,146,34)" fg:x="52" fg:w="905"/><text x="5.6330%" y="271.50">starky-460634d3c708881e`starky::prover::prove</text></g><g><title>starky-460634d3c708881e`starky::proof::StarkOpeningSet&lt;F,_&gt;::new (72 samples, 7.45%)</title><rect x="91.6149%" y="245" width="7.4534%" height="15" fill="rgb(228,22,38)" fg:x="885" fg:w="72"/><text x="91.8649%" y="255.50">starky-460..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 7.45%)</title><rect x="91.6149%" y="229" width="7.4534%" height="15" fill="rgb(235,168,5)" fg:x="885" fg:w="72"/><text x="91.8649%" y="239.50">starky-460..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 7.45%)</title><rect x="91.6149%" y="213" width="7.4534%" height="15" fill="rgb(221,155,16)" fg:x="885" fg:w="72"/><text x="91.8649%" y="223.50">starky-460..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="99.0683%" y="229" width="0.1035%" height="15" fill="rgb(215,215,53)" fg:x="957" fg:w="1"/><text x="99.3183%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::verifier::verify_fri_proof (8 samples, 0.83%)</title><rect x="99.0683%" y="245" width="0.8282%" height="15" fill="rgb(223,4,10)" fg:x="957" fg:w="8"/><text x="99.3183%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_proofs::verify_merkle_proof_to_cap (7 samples, 0.72%)</title><rect x="99.1718%" y="229" width="0.7246%" height="15" fill="rgb(234,103,6)" fg:x="958" fg:w="7"/><text x="99.4218%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakHash&lt;_&gt; as plonky2::plonk::config::Hasher&lt;F&gt;&gt;::hash_no_pad (7 samples, 0.72%)</title><rect x="99.1718%" y="213" width="0.7246%" height="15" fill="rgb(227,97,0)" fg:x="958" fg:w="7"/><text x="99.4218%" y="223.50"></text></g><g><title>starky-460634d3c708881e`keccak_hash::keccak (6 samples, 0.62%)</title><rect x="99.2754%" y="197" width="0.6211%" height="15" fill="rgb(234,150,53)" fg:x="959" fg:w="6"/><text x="99.5254%" y="207.50"></text></g><g><title>starky-460634d3c708881e`tiny_keccak::keccakf::keccakf (6 samples, 0.62%)</title><rect x="99.2754%" y="181" width="0.6211%" height="15" fill="rgb(228,201,54)" fg:x="959" fg:w="6"/><text x="99.5254%" y="191.50"></text></g><g><title>all (966 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="966"/><text x="0.2500%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (964 samples, 99.79%)</title><rect x="0.2070%" y="405" width="99.7930%" height="15" fill="rgb(237,53,32)" fg:x="2" fg:w="964"/><text x="0.4570%" y="415.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (964 samples, 99.79%)</title><rect x="0.2070%" y="389" width="99.7930%" height="15" fill="rgb(233,25,53)" fg:x="2" fg:w="964"/><text x="0.4570%" y="399.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>starky-460634d3c708881e`std::sys::unix::thread::Thread::new::thread_start (964 samples, 99.79%)</title><rect x="0.2070%" y="373" width="99.7930%" height="15" fill="rgb(210,40,34)" fg:x="2" fg:w="964"/><text x="0.4570%" y="383.50">starky-460634d3c708881e`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>starky-460634d3c708881e`core::ops::function::FnOnce::call_once{{vtable.shim}} (964 samples, 99.79%)</title><rect x="0.2070%" y="357" width="99.7930%" height="15" fill="rgb(241,220,44)" fg:x="2" fg:w="964"/><text x="0.4570%" y="367.50">starky-460634d3c708881e`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>starky-460634d3c708881e`std::sys_common::backtrace::__rust_begin_short_backtrace (964 samples, 99.79%)</title><rect x="0.2070%" y="341" width="99.7930%" height="15" fill="rgb(235,28,35)" fg:x="2" fg:w="964"/><text x="0.4570%" y="351.50">starky-460634d3c708881e`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>starky-460634d3c708881e`test::run_test::_{{closure}} (964 samples, 99.79%)</title><rect x="0.2070%" y="325" width="99.7930%" height="15" fill="rgb(210,56,17)" fg:x="2" fg:w="964"/><text x="0.4570%" y="335.50">starky-460634d3c708881e`test::run_test::_{{closure}}</text></g><g><title>starky-460634d3c708881e`test::__rust_begin_short_backtrace (964 samples, 99.79%)</title><rect x="0.2070%" y="309" width="99.7930%" height="15" fill="rgb(224,130,29)" fg:x="2" fg:w="964"/><text x="0.4570%" y="319.50">starky-460634d3c708881e`test::__rust_begin_short_backtrace</text></g><g><title>starky-460634d3c708881e`core::ops::function::FnOnce::call_once (964 samples, 99.79%)</title><rect x="0.2070%" y="293" width="99.7930%" height="15" fill="rgb(235,212,8)" fg:x="2" fg:w="964"/><text x="0.4570%" y="303.50">starky-460634d3c708881e`core::ops::function::FnOnce::call_once</text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::tests::keccak_benchmark_keccak (964 samples, 99.79%)</title><rect x="0.2070%" y="277" width="99.7930%" height="15" fill="rgb(223,33,50)" fg:x="2" fg:w="964"/><text x="0.4570%" y="287.50">starky-460634d3c708881e`starky::keccak::keccak_stark::tests::keccak_benchmark_keccak</text></g><g><title>starky-460634d3c708881e`starky::verifier::verify_stark_proof (9 samples, 0.93%)</title><rect x="99.0683%" y="261" width="0.9317%" height="15" fill="rgb(219,149,13)" fg:x="957" fg:w="9"/><text x="99.3183%" y="271.50"></text></g><g><title>starky-460634d3c708881e`starky::get_challenges::get_challenges (1 samples, 0.10%)</title><rect x="99.8965%" y="245" width="0.1035%" height="15" fill="rgb(250,156,29)" fg:x="965" fg:w="1"/><text x="100.1465%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::iop::challenger::Challenger&lt;F,H&gt;::observe_extension_elements (1 samples, 0.10%)</title><rect x="99.8965%" y="229" width="0.1035%" height="15" fill="rgb(216,193,19)" fg:x="965" fg:w="1"/><text x="100.1465%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2::hash::keccak::KeccakPermutation&lt;F&gt; as plonky2::hash::hashing::PlonkyPermutation&lt;F&gt;&gt;::permute (1 samples, 0.10%)</title><rect x="99.8965%" y="213" width="0.1035%" height="15" fill="rgb(216,135,14)" fg:x="965" fg:w="1"/><text x="100.1465%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="99.8965%" y="197" width="0.1035%" height="15" fill="rgb(241,47,5)" fg:x="965" fg:w="1"/><text x="100.1465%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="99.8965%" y="181" width="0.1035%" height="15" fill="rgb(233,42,35)" fg:x="965" fg:w="1"/><text x="100.1465%" y="191.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="99.8965%" y="165" width="0.1035%" height="15" fill="rgb(231,13,6)" fg:x="965" fg:w="1"/><text x="100.1465%" y="175.50"></text></g><g><title>starky-460634d3c708881e`&lt;tiny_keccak::keccak::Keccak as tiny_keccak::Hasher&gt;::finalize (1 samples, 0.10%)</title><rect x="99.8965%" y="149" width="0.1035%" height="15" fill="rgb(207,181,40)" fg:x="965" fg:w="1"/><text x="100.1465%" y="159.50"></text></g></svg></svg>