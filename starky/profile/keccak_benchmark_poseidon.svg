<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="2058"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.05%)</title><rect x="0.0000%" y="405" width="0.0486%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.05%)</title><rect x="0.0000%" y="389" width="0.0486%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>dyld`start (2 samples, 0.10%)</title><rect x="0.0000%" y="421" width="0.0972%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="431.50"></text></g><g><title>starky-460634d3c708881e`std::rt::lang_start_internal (1 samples, 0.05%)</title><rect x="0.0486%" y="405" width="0.0486%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2986%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.05%)</title><rect x="0.0972%" y="421" width="0.0486%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3472%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.15%)</title><rect x="0.1458%" y="245" width="0.1458%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="3"/><text x="0.3958%" y="255.50"></text></g><g><title>starky-460634d3c708881e`core::array::drain::drain_array_with (2 samples, 0.10%)</title><rect x="0.2915%" y="245" width="0.0972%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="2"/><text x="0.5415%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.9232%" y="229" width="0.0486%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="1"/><text x="1.1732%" y="239.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_rows (35 samples, 1.70%)</title><rect x="0.1458%" y="261" width="1.7007%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="35"/><text x="0.3958%" y="271.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_row_for_round (30 samples, 1.46%)</title><rect x="0.3887%" y="245" width="1.4577%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="30"/><text x="0.6387%" y="255.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace_row_for_round::_{{closure}} (18 samples, 0.87%)</title><rect x="0.9718%" y="229" width="0.8746%" height="15" fill="rgb(250,228,42)" fg:x="20" fg:w="18"/><text x="1.2218%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.05%)</title><rect x="1.8465%" y="245" width="0.0486%" height="15" fill="rgb(240,193,28)" fg:x="38" fg:w="1"/><text x="2.0965%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.05%)</title><rect x="1.8465%" y="229" width="0.0486%" height="15" fill="rgb(216,20,37)" fg:x="38" fg:w="1"/><text x="2.0965%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.49%)</title><rect x="1.8950%" y="245" width="0.4859%" height="15" fill="rgb(206,188,39)" fg:x="39" fg:w="10"/><text x="2.1450%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.49%)</title><rect x="1.8950%" y="229" width="0.4859%" height="15" fill="rgb(217,207,13)" fg:x="39" fg:w="10"/><text x="2.1450%" y="239.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt;::generate_trace (51 samples, 2.48%)</title><rect x="0.1458%" y="277" width="2.4781%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="51"/><text x="0.3958%" y="287.50">st..</text></g><g><title>starky-460634d3c708881e`starky::util::trace_rows_to_poly_values (16 samples, 0.78%)</title><rect x="1.8465%" y="261" width="0.7775%" height="15" fill="rgb(225,20,46)" fg:x="38" fg:w="16"/><text x="2.0965%" y="271.50"></text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.24%)</title><rect x="2.3810%" y="245" width="0.2430%" height="15" fill="rgb(210,31,41)" fg:x="49" fg:w="5"/><text x="2.6310%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.24%)</title><rect x="2.3810%" y="229" width="0.2430%" height="15" fill="rgb(221,200,47)" fg:x="49" fg:w="5"/><text x="2.6310%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.05%)</title><rect x="2.6239%" y="245" width="0.0486%" height="15" fill="rgb(226,26,5)" fg:x="54" fg:w="1"/><text x="2.8739%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (2 samples, 0.10%)</title><rect x="2.6725%" y="245" width="0.0972%" height="15" fill="rgb(249,33,26)" fg:x="55" fg:w="2"/><text x="2.9225%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.10%)</title><rect x="2.6725%" y="229" width="0.0972%" height="15" fill="rgb(235,183,28)" fg:x="55" fg:w="2"/><text x="2.9225%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.34%)</title><rect x="2.6239%" y="261" width="0.3401%" height="15" fill="rgb(221,5,38)" fg:x="54" fg:w="7"/><text x="2.8739%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (4 samples, 0.19%)</title><rect x="2.7697%" y="245" width="0.1944%" height="15" fill="rgb(247,18,42)" fg:x="57" fg:w="4"/><text x="3.0197%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.19%)</title><rect x="2.7697%" y="229" width="0.1944%" height="15" fill="rgb(241,131,45)" fg:x="57" fg:w="4"/><text x="3.0197%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.05%)</title><rect x="2.9640%" y="261" width="0.0486%" height="15" fill="rgb(249,31,29)" fg:x="61" fg:w="1"/><text x="3.2140%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.05%)</title><rect x="2.9640%" y="245" width="0.0486%" height="15" fill="rgb(225,111,53)" fg:x="61" fg:w="1"/><text x="3.2140%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.19%)</title><rect x="3.0126%" y="261" width="0.1944%" height="15" fill="rgb(238,160,17)" fg:x="62" fg:w="4"/><text x="3.2626%" y="271.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="3.2070%" y="261" width="0.0486%" height="15" fill="rgb(214,148,48)" fg:x="66" fg:w="1"/><text x="3.4570%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="3.2070%" y="245" width="0.0486%" height="15" fill="rgb(232,36,49)" fg:x="66" fg:w="1"/><text x="3.4570%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="3.2070%" y="229" width="0.0486%" height="15" fill="rgb(209,103,24)" fg:x="66" fg:w="1"/><text x="3.4570%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.05%)</title><rect x="3.2070%" y="213" width="0.0486%" height="15" fill="rgb(229,88,8)" fg:x="66" fg:w="1"/><text x="3.4570%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.05%)</title><rect x="3.2070%" y="197" width="0.0486%" height="15" fill="rgb(213,181,19)" fg:x="66" fg:w="1"/><text x="3.4570%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.15%)</title><rect x="3.2556%" y="229" width="0.1458%" height="15" fill="rgb(254,191,54)" fg:x="67" fg:w="3"/><text x="3.5056%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic (52 samples, 2.53%)</title><rect x="3.4500%" y="213" width="2.5267%" height="15" fill="rgb(241,83,37)" fg:x="71" fg:w="52"/><text x="3.7000%" y="223.50">st..</text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic::_{{closure}} (1 samples, 0.05%)</title><rect x="5.9767%" y="213" width="0.0486%" height="15" fill="rgb(233,36,39)" fg:x="123" fg:w="1"/><text x="6.2267%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="6.0253%" y="197" width="0.0972%" height="15" fill="rgb(226,3,54)" fg:x="124" fg:w="2"/><text x="6.2753%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.10%)</title><rect x="6.0253%" y="181" width="0.0972%" height="15" fill="rgb(245,192,40)" fg:x="124" fg:w="2"/><text x="6.2753%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.10%)</title><rect x="6.0253%" y="165" width="0.0972%" height="15" fill="rgb(238,167,29)" fg:x="124" fg:w="2"/><text x="6.2753%" y="175.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.07%)</title><rect x="6.1224%" y="197" width="1.0690%" height="15" fill="rgb(232,182,51)" fg:x="126" fg:w="22"/><text x="6.3724%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic::_{{closure}} (2 samples, 0.10%)</title><rect x="7.0943%" y="181" width="0.0972%" height="15" fill="rgb(231,60,39)" fg:x="146" fg:w="2"/><text x="7.3443%" y="191.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic::_{{closure}} (17 samples, 0.83%)</title><rect x="7.1914%" y="197" width="0.8260%" height="15" fill="rgb(208,69,12)" fg:x="148" fg:w="17"/><text x="7.4414%" y="207.50"></text></g><g><title>starky-460634d3c708881e`__rdl_alloc (1 samples, 0.05%)</title><rect x="8.0175%" y="197" width="0.0486%" height="15" fill="rgb(235,93,37)" fg:x="165" fg:w="1"/><text x="8.2675%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;starky::keccak::keccak_stark::KeccakStark&lt;F,_&gt; as starky::stark::Stark&lt;F,_&gt;&gt;::eval_packed_generic (67 samples, 3.26%)</title><rect x="6.0253%" y="213" width="3.2556%" height="15" fill="rgb(213,116,39)" fg:x="124" fg:w="67"/><text x="6.2753%" y="223.50">sta..</text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor3_gen (25 samples, 1.21%)</title><rect x="8.0661%" y="197" width="1.2148%" height="15" fill="rgb(222,207,29)" fg:x="166" fg:w="25"/><text x="8.3161%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.05%)</title><rect x="9.2809%" y="197" width="0.0486%" height="15" fill="rgb(206,96,30)" fg:x="191" fg:w="1"/><text x="9.5309%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::get_lde_values_packed (15 samples, 0.73%)</title><rect x="9.2809%" y="213" width="0.7289%" height="15" fill="rgb(218,138,4)" fg:x="191" fg:w="15"/><text x="9.5309%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.68%)</title><rect x="9.3294%" y="197" width="0.6803%" height="15" fill="rgb(250,191,14)" fg:x="192" fg:w="14"/><text x="9.5794%" y="207.50"></text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor3_gen (2 samples, 0.10%)</title><rect x="10.0097%" y="213" width="0.0972%" height="15" fill="rgb(239,60,40)" fg:x="206" fg:w="2"/><text x="10.2597%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (162 samples, 7.87%)</title><rect x="3.2556%" y="261" width="7.8717%" height="15" fill="rgb(206,27,48)" fg:x="67" fg:w="162"/><text x="3.5056%" y="271.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 7.87%)</title><rect x="3.2556%" y="245" width="7.8717%" height="15" fill="rgb(225,35,8)" fg:x="67" fg:w="162"/><text x="3.5056%" y="255.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (159 samples, 7.73%)</title><rect x="3.4014%" y="229" width="7.7259%" height="15" fill="rgb(250,213,24)" fg:x="70" fg:w="159"/><text x="3.6514%" y="239.50">starky-4606..</text></g><g><title>starky-460634d3c708881e`starky::keccak::logic::xor_gen (21 samples, 1.02%)</title><rect x="10.1069%" y="213" width="1.0204%" height="15" fill="rgb(247,123,22)" fg:x="208" fg:w="21"/><text x="10.3569%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="11.1273%" y="245" width="0.0486%" height="15" fill="rgb(231,138,38)" fg:x="229" fg:w="1"/><text x="11.3773%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="11.1273%" y="229" width="0.0486%" height="15" fill="rgb(231,145,46)" fg:x="229" fg:w="1"/><text x="11.3773%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="11.1273%" y="213" width="0.0486%" height="15" fill="rgb(251,118,11)" fg:x="229" fg:w="1"/><text x="11.3773%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_with_options (1 samples, 0.05%)</title><rect x="11.1273%" y="197" width="0.0486%" height="15" fill="rgb(217,147,25)" fg:x="229" fg:w="1"/><text x="11.3773%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic_simd (1 samples, 0.05%)</title><rect x="11.1273%" y="181" width="0.0486%" height="15" fill="rgb(247,81,37)" fg:x="229" fg:w="1"/><text x="11.3773%" y="191.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="11.1759%" y="133" width="0.0486%" height="15" fill="rgb(209,12,38)" fg:x="230" fg:w="1"/><text x="11.4259%" y="143.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (1 samples, 0.05%)</title><rect x="11.1759%" y="117" width="0.0486%" height="15" fill="rgb(227,1,9)" fg:x="230" fg:w="1"/><text x="11.4259%" y="127.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (2 samples, 0.10%)</title><rect x="11.2245%" y="117" width="0.0972%" height="15" fill="rgb(248,47,43)" fg:x="231" fg:w="2"/><text x="11.4745%" y="127.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (1 samples, 0.05%)</title><rect x="11.2731%" y="101" width="0.0486%" height="15" fill="rgb(221,10,30)" fg:x="232" fg:w="1"/><text x="11.5231%" y="111.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_coeffs (5 samples, 0.24%)</title><rect x="11.1273%" y="261" width="0.2430%" height="15" fill="rgb(210,229,1)" fg:x="229" fg:w="5"/><text x="11.3773%" y="271.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new (4 samples, 0.19%)</title><rect x="11.1759%" y="245" width="0.1944%" height="15" fill="rgb(222,148,37)" fg:x="230" fg:w="4"/><text x="11.4259%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="229" width="0.1944%" height="15" fill="rgb(234,67,33)" fg:x="230" fg:w="4"/><text x="11.4259%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="213" width="0.1944%" height="15" fill="rgb(247,98,35)" fg:x="230" fg:w="4"/><text x="11.4259%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="197" width="0.1944%" height="15" fill="rgb(247,138,52)" fg:x="230" fg:w="4"/><text x="11.4259%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="181" width="0.1944%" height="15" fill="rgb(213,79,30)" fg:x="230" fg:w="4"/><text x="11.4259%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="165" width="0.1944%" height="15" fill="rgb(246,177,23)" fg:x="230" fg:w="4"/><text x="11.4259%" y="175.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (4 samples, 0.19%)</title><rect x="11.1759%" y="149" width="0.1944%" height="15" fill="rgb(230,62,27)" fg:x="230" fg:w="4"/><text x="11.4259%" y="159.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (3 samples, 0.15%)</title><rect x="11.2245%" y="133" width="0.1458%" height="15" fill="rgb(216,154,8)" fg:x="231" fg:w="3"/><text x="11.4745%" y="143.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1 samples, 0.05%)</title><rect x="11.3217%" y="117" width="0.0486%" height="15" fill="rgb(244,35,45)" fg:x="233" fg:w="1"/><text x="11.5717%" y="127.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="11.3217%" y="101" width="0.0486%" height="15" fill="rgb(251,115,12)" fg:x="233" fg:w="1"/><text x="11.5717%" y="111.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (1 samples, 0.05%)</title><rect x="11.3217%" y="85" width="0.0486%" height="15" fill="rgb(240,54,50)" fg:x="233" fg:w="1"/><text x="11.5717%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.05%)</title><rect x="11.3703%" y="229" width="0.0486%" height="15" fill="rgb(233,84,52)" fg:x="234" fg:w="1"/><text x="11.6203%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic (6 samples, 0.29%)</title><rect x="11.5160%" y="213" width="0.2915%" height="15" fill="rgb(207,117,47)" fg:x="237" fg:w="6"/><text x="11.7660%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2_util::reverse_index_bits_in_place (6 samples, 0.29%)</title><rect x="11.5160%" y="197" width="0.2915%" height="15" fill="rgb(249,43,39)" fg:x="237" fg:w="6"/><text x="11.7660%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic_simd (55 samples, 2.67%)</title><rect x="11.8076%" y="213" width="2.6725%" height="15" fill="rgb(209,38,44)" fg:x="243" fg:w="55"/><text x="12.0576%" y="223.50">st..</text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$realloc (1 samples, 0.05%)</title><rect x="15.1118%" y="165" width="0.0486%" height="15" fill="rgb(236,212,23)" fg:x="311" fg:w="1"/><text x="15.3618%" y="175.50"></text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (80 samples, 3.89%)</title><rect x="11.3703%" y="245" width="3.8873%" height="15" fill="rgb(242,79,21)" fg:x="234" fg:w="80"/><text x="11.6203%" y="255.50">star..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::ifft_with_options (79 samples, 3.84%)</title><rect x="11.4189%" y="229" width="3.8387%" height="15" fill="rgb(211,96,35)" fg:x="235" fg:w="79"/><text x="11.6689%" y="239.50">star..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_root_table (16 samples, 0.78%)</title><rect x="14.4801%" y="213" width="0.7775%" height="15" fill="rgb(253,215,40)" fg:x="298" fg:w="16"/><text x="14.7301%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.78%)</title><rect x="14.4801%" y="197" width="0.7775%" height="15" fill="rgb(211,81,21)" fg:x="298" fg:w="16"/><text x="14.7301%" y="207.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.15%)</title><rect x="15.1118%" y="181" width="0.1458%" height="15" fill="rgb(208,190,38)" fg:x="311" fg:w="3"/><text x="15.3618%" y="191.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (2 samples, 0.10%)</title><rect x="15.1603%" y="165" width="0.0972%" height="15" fill="rgb(235,213,38)" fg:x="312" fg:w="2"/><text x="15.4103%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.05%)</title><rect x="15.2089%" y="149" width="0.0486%" height="15" fill="rgb(237,122,38)" fg:x="313" fg:w="1"/><text x="15.4589%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.05%)</title><rect x="15.2089%" y="133" width="0.0486%" height="15" fill="rgb(244,218,35)" fg:x="313" fg:w="1"/><text x="15.4589%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="15.2089%" y="117" width="0.0486%" height="15" fill="rgb(240,68,47)" fg:x="313" fg:w="1"/><text x="15.4589%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.05%)</title><rect x="15.2089%" y="101" width="0.0486%" height="15" fill="rgb(210,16,53)" fg:x="313" fg:w="1"/><text x="15.4589%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.15%)</title><rect x="15.2575%" y="229" width="0.1458%" height="15" fill="rgb(235,124,12)" fg:x="314" fg:w="3"/><text x="15.5075%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (2 samples, 0.10%)</title><rect x="15.3061%" y="213" width="0.0972%" height="15" fill="rgb(224,169,11)" fg:x="315" fg:w="2"/><text x="15.5561%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.10%)</title><rect x="15.3061%" y="197" width="0.0972%" height="15" fill="rgb(250,166,2)" fg:x="315" fg:w="2"/><text x="15.5561%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 2.62%)</title><rect x="15.4033%" y="213" width="2.6239%" height="15" fill="rgb(242,216,29)" fg:x="317" fg:w="54"/><text x="15.6533%" y="223.50">st..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="17.9786%" y="197" width="0.0486%" height="15" fill="rgb(230,116,27)" fg:x="370" fg:w="1"/><text x="18.2286%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="17.9786%" y="181" width="0.0486%" height="15" fill="rgb(228,99,48)" fg:x="370" fg:w="1"/><text x="18.2286%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.05%)</title><rect x="18.0272%" y="181" width="0.0486%" height="15" fill="rgb(253,11,6)" fg:x="371" fg:w="1"/><text x="18.2772%" y="191.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 1.99%)</title><rect x="18.0758%" y="181" width="1.9922%" height="15" fill="rgb(247,143,39)" fg:x="372" fg:w="41"/><text x="18.3258%" y="191.50">s..</text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.19%)</title><rect x="19.8737%" y="165" width="0.1944%" height="15" fill="rgb(236,97,10)" fg:x="409" fg:w="4"/><text x="20.1237%" y="175.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (4 samples, 0.19%)</title><rect x="19.8737%" y="149" width="0.1944%" height="15" fill="rgb(233,208,19)" fg:x="409" fg:w="4"/><text x="20.1237%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.19%)</title><rect x="19.8737%" y="133" width="0.1944%" height="15" fill="rgb(216,164,2)" fg:x="409" fg:w="4"/><text x="20.1237%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.15%)</title><rect x="19.9223%" y="117" width="0.1458%" height="15" fill="rgb(220,129,5)" fg:x="410" fg:w="3"/><text x="20.1723%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.15%)</title><rect x="19.9223%" y="101" width="0.1458%" height="15" fill="rgb(242,17,10)" fg:x="410" fg:w="3"/><text x="20.1723%" y="111.50"></text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$free (1 samples, 0.05%)</title><rect x="20.0680%" y="181" width="0.0486%" height="15" fill="rgb(242,107,0)" fg:x="413" fg:w="1"/><text x="20.3180%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic (18 samples, 0.87%)</title><rect x="20.1166%" y="165" width="0.8746%" height="15" fill="rgb(251,28,31)" fg:x="414" fg:w="18"/><text x="20.3666%" y="175.50"></text></g><g><title>starky-460634d3c708881e`plonky2_util::reverse_index_bits_in_place (7 samples, 0.34%)</title><rect x="20.6511%" y="149" width="0.3401%" height="15" fill="rgb(233,223,10)" fg:x="425" fg:w="7"/><text x="20.9011%" y="159.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_classic_simd (95 samples, 4.62%)</title><rect x="20.9913%" y="165" width="4.6161%" height="15" fill="rgb(215,21,27)" fg:x="432" fg:w="95"/><text x="21.2413%" y="175.50">stark..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.05%)</title><rect x="27.2595%" y="101" width="0.0486%" height="15" fill="rgb(232,23,21)" fg:x="561" fg:w="1"/><text x="27.5095%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.05%)</title><rect x="27.3081%" y="69" width="0.0486%" height="15" fill="rgb(244,5,23)" fg:x="562" fg:w="1"/><text x="27.5581%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.05%)</title><rect x="27.3567%" y="69" width="0.0486%" height="15" fill="rgb(226,81,46)" fg:x="563" fg:w="1"/><text x="27.6067%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="27.3567%" y="53" width="0.0486%" height="15" fill="rgb(247,70,30)" fg:x="563" fg:w="1"/><text x="27.6067%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.05%)</title><rect x="27.3567%" y="37" width="0.0486%" height="15" fill="rgb(212,68,19)" fg:x="563" fg:w="1"/><text x="27.6067%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.15%)</title><rect x="27.3081%" y="85" width="0.1458%" height="15" fill="rgb(240,187,13)" fg:x="562" fg:w="3"/><text x="27.5581%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.05%)</title><rect x="27.4052%" y="69" width="0.0486%" height="15" fill="rgb(223,113,26)" fg:x="564" fg:w="1"/><text x="27.6552%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.05%)</title><rect x="27.4052%" y="53" width="0.0486%" height="15" fill="rgb(206,192,2)" fg:x="564" fg:w="1"/><text x="27.6552%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.05%)</title><rect x="27.4052%" y="37" width="0.0486%" height="15" fill="rgb(241,108,4)" fg:x="564" fg:w="1"/><text x="27.6552%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.05%)</title><rect x="27.4538%" y="85" width="0.0486%" height="15" fill="rgb(247,173,49)" fg:x="565" fg:w="1"/><text x="27.7038%" y="95.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.29%)</title><rect x="27.2595%" y="133" width="0.2915%" height="15" fill="rgb(224,114,35)" fg:x="561" fg:w="6"/><text x="27.5095%" y="143.50"></text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (6 samples, 0.29%)</title><rect x="27.2595%" y="117" width="0.2915%" height="15" fill="rgb(245,159,27)" fg:x="561" fg:w="6"/><text x="27.5095%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.24%)</title><rect x="27.3081%" y="101" width="0.2430%" height="15" fill="rgb(245,172,44)" fg:x="562" fg:w="5"/><text x="27.5581%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.05%)</title><rect x="27.5024%" y="85" width="0.0486%" height="15" fill="rgb(236,23,11)" fg:x="566" fg:w="1"/><text x="27.7524%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.05%)</title><rect x="27.5024%" y="69" width="0.0486%" height="15" fill="rgb(205,117,38)" fg:x="566" fg:w="1"/><text x="27.7524%" y="79.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (251 samples, 12.20%)</title><rect x="15.4033%" y="229" width="12.1963%" height="15" fill="rgb(237,72,25)" fg:x="317" fg:w="251"/><text x="15.6533%" y="239.50">starky-460634d3c70..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (197 samples, 9.57%)</title><rect x="18.0272%" y="213" width="9.5724%" height="15" fill="rgb(244,70,9)" fg:x="371" fg:w="197"/><text x="18.2772%" y="223.50">starky-460634d..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (197 samples, 9.57%)</title><rect x="18.0272%" y="197" width="9.5724%" height="15" fill="rgb(217,125,39)" fg:x="371" fg:w="197"/><text x="18.2772%" y="207.50">starky-460634d..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_with_options (154 samples, 7.48%)</title><rect x="20.1166%" y="181" width="7.4830%" height="15" fill="rgb(235,36,10)" fg:x="414" fg:w="154"/><text x="20.3666%" y="191.50">starky-460..</text></g><g><title>starky-460634d3c708881e`plonky2_field::fft::fft_root_table (41 samples, 1.99%)</title><rect x="25.6074%" y="165" width="1.9922%" height="15" fill="rgb(251,123,47)" fg:x="527" fg:w="41"/><text x="25.8574%" y="175.50">s..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 1.99%)</title><rect x="25.6074%" y="149" width="1.9922%" height="15" fill="rgb(221,13,13)" fg:x="527" fg:w="41"/><text x="25.8574%" y="159.50">s..</text></g><g><title>starky-460634d3c708881e`alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="27.5510%" y="133" width="0.0486%" height="15" fill="rgb(238,131,9)" fg:x="567" fg:w="1"/><text x="27.8010%" y="143.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="27.5996%" y="165" width="0.0486%" height="15" fill="rgb(211,50,8)" fg:x="568" fg:w="1"/><text x="27.8496%" y="175.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (2 samples, 0.10%)</title><rect x="27.6482%" y="101" width="0.0972%" height="15" fill="rgb(245,182,24)" fg:x="569" fg:w="2"/><text x="27.8982%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.24%)</title><rect x="27.7454%" y="85" width="0.2430%" height="15" fill="rgb(242,14,37)" fg:x="571" fg:w="5"/><text x="27.9954%" y="95.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (4 samples, 0.19%)</title><rect x="27.9883%" y="85" width="0.1944%" height="15" fill="rgb(246,228,12)" fg:x="576" fg:w="4"/><text x="28.2383%" y="95.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (2 samples, 0.10%)</title><rect x="28.0855%" y="69" width="0.0972%" height="15" fill="rgb(213,55,15)" fg:x="578" fg:w="2"/><text x="28.3355%" y="79.50"></text></g><g><title>starky-460634d3c708881e`DYLD-STUB$$memcpy (1 samples, 0.05%)</title><rect x="28.1827%" y="85" width="0.0486%" height="15" fill="rgb(209,9,3)" fg:x="580" fg:w="1"/><text x="28.4327%" y="95.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1,271 samples, 61.76%)</title><rect x="28.2799%" y="69" width="61.7590%" height="15" fill="rgb(230,59,30)" fg:x="582" fg:w="1271"/><text x="28.5299%" y="79.50">starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute</text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (462 samples, 22.45%)</title><rect x="67.5899%" y="53" width="22.4490%" height="15" fill="rgb(209,121,21)" fg:x="1391" fg:w="462"/><text x="67.8399%" y="63.50">starky-460634d3c708881e`plonky2::has..</text></g><g><title>starky-460634d3c708881e`&lt;plonky2_field::goldilocks_field::GoldilocksField as plonky2_field::types::Field&gt;::from_noncanonical_u128 (11 samples, 0.53%)</title><rect x="90.0389%" y="69" width="0.5345%" height="15" fill="rgb(220,109,13)" fg:x="1853" fg:w="11"/><text x="90.2889%" y="79.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2_field::goldilocks_field::GoldilocksField as plonky2_field::types::Field&gt;::from_noncanonical_u96 (13 samples, 0.63%)</title><rect x="90.5734%" y="69" width="0.6317%" height="15" fill="rgb(232,18,1)" fg:x="1864" fg:w="13"/><text x="90.8234%" y="79.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_values (1,644 samples, 79.88%)</title><rect x="11.3703%" y="261" width="79.8834%" height="15" fill="rgb(215,41,42)" fg:x="234" fg:w="1644"/><text x="11.6203%" y="271.50">starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_values</text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_coeffs (1,564 samples, 76.00%)</title><rect x="15.2575%" y="245" width="75.9961%" height="15" fill="rgb(224,123,36)" fg:x="314" fg:w="1564"/><text x="15.5075%" y="255.50">starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::from_coeffs</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new (1,310 samples, 63.65%)</title><rect x="27.5996%" y="229" width="63.6540%" height="15" fill="rgb(240,125,3)" fg:x="568" fg:w="1310"/><text x="27.8496%" y="239.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,310 samples, 63.65%)</title><rect x="27.5996%" y="213" width="63.6540%" height="15" fill="rgb(205,98,50)" fg:x="568" fg:w="1310"/><text x="27.8496%" y="223.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,310 samples, 63.65%)</title><rect x="27.5996%" y="197" width="63.6540%" height="15" fill="rgb(205,185,37)" fg:x="568" fg:w="1310"/><text x="27.8496%" y="207.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,310 samples, 63.65%)</title><rect x="27.5996%" y="181" width="63.6540%" height="15" fill="rgb(238,207,15)" fg:x="568" fg:w="1310"/><text x="27.8496%" y="191.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,309 samples, 63.61%)</title><rect x="27.6482%" y="165" width="63.6054%" height="15" fill="rgb(213,199,42)" fg:x="569" fg:w="1309"/><text x="27.8982%" y="175.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,309 samples, 63.61%)</title><rect x="27.6482%" y="149" width="63.6054%" height="15" fill="rgb(235,201,11)" fg:x="569" fg:w="1309"/><text x="27.8982%" y="159.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,309 samples, 63.61%)</title><rect x="27.6482%" y="133" width="63.6054%" height="15" fill="rgb(207,46,11)" fg:x="569" fg:w="1309"/><text x="27.8982%" y="143.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,309 samples, 63.61%)</title><rect x="27.6482%" y="117" width="63.6054%" height="15" fill="rgb(241,35,35)" fg:x="569" fg:w="1309"/><text x="27.8982%" y="127.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1,307 samples, 63.51%)</title><rect x="27.7454%" y="101" width="63.5083%" height="15" fill="rgb(243,32,47)" fg:x="571" fg:w="1307"/><text x="27.9954%" y="111.50">starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree</text></g><g><title>starky-460634d3c708881e`plonky2::hash::hashing::hash_n_to_hash_no_pad (1,297 samples, 63.02%)</title><rect x="28.2313%" y="85" width="63.0224%" height="15" fill="rgb(247,202,23)" fg:x="581" fg:w="1297"/><text x="28.4813%" y="95.50">starky-460634d3c708881e`plonky2::hash::hashing::hash_n_to_hash_no_pad</text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (1 samples, 0.05%)</title><rect x="91.2051%" y="69" width="0.0486%" height="15" fill="rgb(219,102,11)" fg:x="1877" fg:w="1"/><text x="91.4551%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.05%)</title><rect x="91.2536%" y="213" width="0.0486%" height="15" fill="rgb(243,110,44)" fg:x="1878" fg:w="1"/><text x="91.5036%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.10%)</title><rect x="91.2536%" y="229" width="0.0972%" height="15" fill="rgb(222,74,54)" fg:x="1878" fg:w="2"/><text x="91.5036%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.05%)</title><rect x="91.3022%" y="213" width="0.0486%" height="15" fill="rgb(216,99,12)" fg:x="1879" fg:w="1"/><text x="91.5522%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;&amp;plonky2_field::polynomial::PolynomialCoeffs&lt;F&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.19%)</title><rect x="91.3508%" y="229" width="0.1944%" height="15" fill="rgb(226,22,26)" fg:x="1880" fg:w="4"/><text x="91.6008%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.19%)</title><rect x="91.3508%" y="213" width="0.1944%" height="15" fill="rgb(217,163,10)" fg:x="1880" fg:w="4"/><text x="91.6008%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.78%)</title><rect x="91.5452%" y="229" width="0.7775%" height="15" fill="rgb(213,25,53)" fg:x="1884" fg:w="16"/><text x="91.7952%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 1.85%)</title><rect x="91.2536%" y="245" width="1.8465%" height="15" fill="rgb(252,105,26)" fg:x="1878" fg:w="38"/><text x="91.5036%" y="255.50">s..</text></g><g><title>starky-460634d3c708881e`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.78%)</title><rect x="92.3226%" y="229" width="0.7775%" height="15" fill="rgb(220,39,43)" fg:x="1900" fg:w="16"/><text x="92.5726%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (30 samples, 1.46%)</title><rect x="93.1001%" y="213" width="1.4577%" height="15" fill="rgb(229,68,48)" fg:x="1916" fg:w="30"/><text x="93.3501%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (11 samples, 0.53%)</title><rect x="94.0233%" y="197" width="0.5345%" height="15" fill="rgb(252,8,32)" fg:x="1935" fg:w="11"/><text x="94.2733%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;T as plonky2_maybe_rayon::ParallelIteratorMock&gt;::find_any (31 samples, 1.51%)</title><rect x="93.1001%" y="229" width="1.5063%" height="15" fill="rgb(223,20,43)" fg:x="1916" fg:w="31"/><text x="93.3501%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2_field::goldilocks_field::GoldilocksField as plonky2_field::types::Field&gt;::from_noncanonical_u96 (1 samples, 0.05%)</title><rect x="94.5578%" y="213" width="0.0486%" height="15" fill="rgb(229,81,49)" fg:x="1946" fg:w="1"/><text x="94.8078%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::hashing::hash_n_to_hash_no_pad (1 samples, 0.05%)</title><rect x="94.6064%" y="213" width="0.0486%" height="15" fill="rgb(236,28,36)" fg:x="1947" fg:w="1"/><text x="94.8564%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="94.6064%" y="197" width="0.0486%" height="15" fill="rgb(249,185,26)" fg:x="1947" fg:w="1"/><text x="94.8564%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::oracle::PolynomialBatch&lt;F,C,_&gt;::prove_openings (71 samples, 3.45%)</title><rect x="91.2536%" y="261" width="3.4500%" height="15" fill="rgb(249,174,33)" fg:x="1878" fg:w="71"/><text x="91.5036%" y="271.50">sta..</text></g><g><title>starky-460634d3c708881e`plonky2::fri::prover::fri_proof (33 samples, 1.60%)</title><rect x="93.1001%" y="245" width="1.6035%" height="15" fill="rgb(233,201,37)" fg:x="1916" fg:w="33"/><text x="93.3501%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::MerkleTree&lt;F,H&gt;::new (2 samples, 0.10%)</title><rect x="94.6064%" y="229" width="0.0972%" height="15" fill="rgb(221,78,26)" fg:x="1947" fg:w="2"/><text x="94.8564%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1 samples, 0.05%)</title><rect x="94.6550%" y="213" width="0.0486%" height="15" fill="rgb(250,127,30)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1 samples, 0.05%)</title><rect x="94.6550%" y="197" width="0.0486%" height="15" fill="rgb(230,49,44)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="207.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1 samples, 0.05%)</title><rect x="94.6550%" y="181" width="0.0486%" height="15" fill="rgb(229,67,23)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="191.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_tree::fill_subtree (1 samples, 0.05%)</title><rect x="94.6550%" y="165" width="0.0486%" height="15" fill="rgb(249,83,47)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="175.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::hashing::hash_n_to_hash_no_pad (1 samples, 0.05%)</title><rect x="94.6550%" y="149" width="0.0486%" height="15" fill="rgb(215,43,3)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="159.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="94.6550%" y="133" width="0.0486%" height="15" fill="rgb(238,154,13)" fg:x="1948" fg:w="1"/><text x="94.9050%" y="143.50"></text></g><g><title>starky-460634d3c708881e`plonky2::iop::challenger::Challenger&lt;F,H&gt;::observe_extension_elements (2 samples, 0.10%)</title><rect x="94.7036%" y="261" width="0.0972%" height="15" fill="rgb(219,56,2)" fg:x="1949" fg:w="2"/><text x="94.9536%" y="271.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (2 samples, 0.10%)</title><rect x="94.7036%" y="245" width="0.0972%" height="15" fill="rgb(233,0,4)" fg:x="1949" fg:w="2"/><text x="94.9536%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (2 samples, 0.10%)</title><rect x="94.7036%" y="229" width="0.0972%" height="15" fill="rgb(235,30,7)" fg:x="1949" fg:w="2"/><text x="94.9536%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.19%)</title><rect x="94.8008%" y="229" width="0.1944%" height="15" fill="rgb(250,79,13)" fg:x="1951" fg:w="4"/><text x="95.0508%" y="239.50"></text></g><g><title>starky-460634d3c708881e`starky::prover::prove (1,969 samples, 95.68%)</title><rect x="2.6239%" y="277" width="95.6754%" height="15" fill="rgb(211,146,34)" fg:x="54" fg:w="1969"/><text x="2.8739%" y="287.50">starky-460634d3c708881e`starky::prover::prove</text></g><g><title>starky-460634d3c708881e`starky::proof::StarkOpeningSet&lt;F,_&gt;::new (72 samples, 3.50%)</title><rect x="94.8008%" y="261" width="3.4985%" height="15" fill="rgb(228,22,38)" fg:x="1951" fg:w="72"/><text x="95.0508%" y="271.50">sta..</text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 3.50%)</title><rect x="94.8008%" y="245" width="3.4985%" height="15" fill="rgb(235,168,5)" fg:x="1951" fg:w="72"/><text x="95.0508%" y="255.50">sta..</text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 3.30%)</title><rect x="94.9951%" y="229" width="3.3042%" height="15" fill="rgb(221,155,16)" fg:x="1955" fg:w="68"/><text x="95.2451%" y="239.50">sta..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.05%)</title><rect x="98.2993%" y="245" width="0.0486%" height="15" fill="rgb(215,215,53)" fg:x="2023" fg:w="1"/><text x="98.5493%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::rfold (8 samples, 0.39%)</title><rect x="98.3479%" y="245" width="0.3887%" height="15" fill="rgb(223,4,10)" fg:x="2024" fg:w="8"/><text x="98.5979%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="98.7366%" y="229" width="0.0486%" height="15" fill="rgb(234,103,6)" fg:x="2032" fg:w="1"/><text x="98.9866%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="98.7366%" y="213" width="0.0486%" height="15" fill="rgb(227,97,0)" fg:x="2032" fg:w="1"/><text x="98.9866%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::verifier::compute_evaluation (2 samples, 0.10%)</title><rect x="98.7366%" y="245" width="0.0972%" height="15" fill="rgb(234,150,53)" fg:x="2032" fg:w="2"/><text x="98.9866%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2_field::interpolation::interpolate (1 samples, 0.05%)</title><rect x="98.7852%" y="229" width="0.0486%" height="15" fill="rgb(228,201,54)" fg:x="2033" fg:w="1"/><text x="99.0352%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="98.7852%" y="213" width="0.0486%" height="15" fill="rgb(222,22,37)" fg:x="2033" fg:w="1"/><text x="99.0352%" y="223.50"></text></g><g><title>starky-460634d3c708881e`&lt;plonky2_field::goldilocks_field::GoldilocksField as plonky2_field::types::Field&gt;::try_inverse (1 samples, 0.05%)</title><rect x="98.7852%" y="197" width="0.0486%" height="15" fill="rgb(237,53,32)" fg:x="2033" fg:w="1"/><text x="99.0352%" y="207.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (2 samples, 0.10%)</title><rect x="98.8338%" y="229" width="0.0972%" height="15" fill="rgb(233,25,53)" fg:x="2034" fg:w="2"/><text x="99.0838%" y="239.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (1 samples, 0.05%)</title><rect x="98.8824%" y="213" width="0.0486%" height="15" fill="rgb(210,40,34)" fg:x="2035" fg:w="1"/><text x="99.1324%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::fri::verifier::verify_fri_proof (34 samples, 1.65%)</title><rect x="98.2993%" y="261" width="1.6521%" height="15" fill="rgb(241,220,44)" fg:x="2023" fg:w="34"/><text x="98.5493%" y="271.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::merkle_proofs::verify_merkle_proof_to_cap (23 samples, 1.12%)</title><rect x="98.8338%" y="245" width="1.1176%" height="15" fill="rgb(235,28,35)" fg:x="2034" fg:w="23"/><text x="99.0838%" y="255.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::hashing::hash_n_to_hash_no_pad (21 samples, 1.02%)</title><rect x="98.9310%" y="229" width="1.0204%" height="15" fill="rgb(210,56,17)" fg:x="2036" fg:w="21"/><text x="99.1810%" y="239.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (21 samples, 1.02%)</title><rect x="98.9310%" y="213" width="1.0204%" height="15" fill="rgb(224,130,29)" fg:x="2036" fg:w="21"/><text x="99.1810%" y="223.50"></text></g><g><title>starky-460634d3c708881e`plonky2::hash::poseidon::Poseidon::full_rounds (7 samples, 0.34%)</title><rect x="99.6113%" y="197" width="0.3401%" height="15" fill="rgb(235,212,8)" fg:x="2050" fg:w="7"/><text x="99.8613%" y="207.50"></text></g><g><title>all (2,058 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="2058"/><text x="0.2500%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,055 samples, 99.85%)</title><rect x="0.1458%" y="421" width="99.8542%" height="15" fill="rgb(219,149,13)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="431.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,055 samples, 99.85%)</title><rect x="0.1458%" y="405" width="99.8542%" height="15" fill="rgb(250,156,29)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="415.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>starky-460634d3c708881e`std::sys::unix::thread::Thread::new::thread_start (2,055 samples, 99.85%)</title><rect x="0.1458%" y="389" width="99.8542%" height="15" fill="rgb(216,193,19)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="399.50">starky-460634d3c708881e`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>starky-460634d3c708881e`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,055 samples, 99.85%)</title><rect x="0.1458%" y="373" width="99.8542%" height="15" fill="rgb(216,135,14)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="383.50">starky-460634d3c708881e`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>starky-460634d3c708881e`std::sys_common::backtrace::__rust_begin_short_backtrace (2,055 samples, 99.85%)</title><rect x="0.1458%" y="357" width="99.8542%" height="15" fill="rgb(241,47,5)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="367.50">starky-460634d3c708881e`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>starky-460634d3c708881e`test::run_test::_{{closure}} (2,055 samples, 99.85%)</title><rect x="0.1458%" y="341" width="99.8542%" height="15" fill="rgb(233,42,35)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="351.50">starky-460634d3c708881e`test::run_test::_{{closure}}</text></g><g><title>starky-460634d3c708881e`test::__rust_begin_short_backtrace (2,055 samples, 99.85%)</title><rect x="0.1458%" y="325" width="99.8542%" height="15" fill="rgb(231,13,6)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="335.50">starky-460634d3c708881e`test::__rust_begin_short_backtrace</text></g><g><title>starky-460634d3c708881e`core::ops::function::FnOnce::call_once (2,055 samples, 99.85%)</title><rect x="0.1458%" y="309" width="99.8542%" height="15" fill="rgb(207,181,40)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="319.50">starky-460634d3c708881e`core::ops::function::FnOnce::call_once</text></g><g><title>starky-460634d3c708881e`starky::keccak::keccak_stark::tests::keccak_benchmark_poseidon (2,055 samples, 99.85%)</title><rect x="0.1458%" y="293" width="99.8542%" height="15" fill="rgb(254,173,49)" fg:x="3" fg:w="2055"/><text x="0.3958%" y="303.50">starky-460634d3c708881e`starky::keccak::keccak_stark::tests::keccak_benchmark_poseidon</text></g><g><title>starky-460634d3c708881e`starky::verifier::verify_stark_proof (35 samples, 1.70%)</title><rect x="98.2993%" y="277" width="1.7007%" height="15" fill="rgb(221,1,38)" fg:x="2023" fg:w="35"/><text x="98.5493%" y="287.50"></text></g><g><title>starky-460634d3c708881e`starky::get_challenges::get_challenges (1 samples, 0.05%)</title><rect x="99.9514%" y="261" width="0.0486%" height="15" fill="rgb(206,124,46)" fg:x="2057" fg:w="1"/><text x="100.2014%" y="271.50"></text></g><g><title>starky-460634d3c708881e`plonky2::iop::challenger::Challenger&lt;F,H&gt;::observe_extension_elements (1 samples, 0.05%)</title><rect x="99.9514%" y="245" width="0.0486%" height="15" fill="rgb(249,21,11)" fg:x="2057" fg:w="1"/><text x="100.2014%" y="255.50"></text></g><g><title>starky-460634d3c708881e`&lt;F as plonky2::hash::poseidon::Permuter&gt;::permute (1 samples, 0.05%)</title><rect x="99.9514%" y="229" width="0.0486%" height="15" fill="rgb(222,201,40)" fg:x="2057" fg:w="1"/><text x="100.2014%" y="239.50"></text></g></svg></svg>